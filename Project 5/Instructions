We present another synthetic data set - data puzzle with secret patterns generated by my tool - the DataMaker. 

It is about hiring data for some not very selective company. 

Data is all categorical to make it easy for your first prediction challenge.  Candidates undergo coding test, peer evaluation (employees who meet with them record the impressions and the most dominant impression is recorded. Is the candidate nerdy or outgoing?  confident?  shy?.  In addition we record the major (of course what else) and fake university they graduated from.  Who will be hired?   Your job is to predict it. 

You first build prediction model from

HireTrainApr10.csv Download HireTrainApr10.csvOpen this document with ReadSpeaker docReader 

which shows the training data of 2000 candidates.

test_challenge1.csv (Make sure you use the correct test dataset.)Download test_challenge1.csv (Make sure you use the correct test dataset.)

sample_submission_challenge1.csv

Use chisq test to test each column (variable) relationship to the predicted column (Hired).

If you cannot reject independence hypothesis - this column is less likely to play a role in prediction model (but never say never). Than, as I show in the snippets in seciton 16 of active textbook, use table() for subsets of the HireTrain data set. Find such subsets which are "decisive" either with very large proportion of Hired ='Yes' or with very high proportion of Hired ='No'.  There is a bit of brute force here (as you can see in Eva Zhang, 2022 submission. Yup, this unglamorous part of life of data scientist so far.  It is human in the loop - which is very important, your intuitions are so far not matched by just straight application of libraries in R (which you are NOT using here).

Then after you are convinced that your prediction model is as good as you can make it (use 1-step crossvalidate), then you use the testing data of 1000 candidates

To be provided, you need it only on 04-18th

to produce the final submission to Kaggle - vector of 1200 decisions (yes/no)

To be provided - needed only on 04-18th

 Download M2022submission.csv is the file you will submit to Kaggle of course after filling up the HIRED column.  

This test submission will be handled through Kaggle (just the error computation part)  and  Canvas just like for any assignments so far (Kaggle submission instructions coming). Kaggle will automatically calculate your prediction error/accuracy.

FOR THIS PREDICTION CHALLENGE:  Free style prediction only,  Do not use any R library ML (machine learning)  functions.  Just follow example from  the snippet 16.1. Build your own decision vector - decision. 

WHAT TO SUBMIT:  Kaggle submission is a MUST, cannot be late - per instruction soon to follow.  Kaggle submission can only take place on the last day of this competition â€“ IT IS ON April 18th.  You can  submit TWICE. One submisison before 8PM, another one after 8PM.   But you can refine your predictor on R studio as many times as you want before submitting the final csv file with predicted grades to Kaggle. ALSO - Kaggle will only be open on the last day of submision, Tuesday, April 18th.

However work on your prediction model all week using r studio. Kaggle is involved only in the final submission. Use one step crossvalidation snippet - just to get a feel how well your prediciton model does on training data. 

ADDITIONALLY - Follow the active textbook section 14 data puzzle set of snippets (from get to know your data) through Bayesian (No hypothesis testing since we do not have numerical variable there)  and write similar snippets (your choice but similar) and submit your code (worth 1 points out of 5 for this assignment)

In addition to KAGGLE  submission you should follow regular canvas submission

Accuracy of your model will be compared to benchmark, you will have to do better than benchmark, otherwise you will lose one point (out of 5).  

BENCHMARK:  At least 85% accuracy.  at most 15% error.

Submit to canvas: power points explaining what you did.  Critical - EXPLAIN HOW YOU ARRIVED AT YOUR PREDICTION MODEL


Plus  your R code.  

Submit to Kaggle the submission file with grades filled in according to your prediction model

 We will check the top solutions  for the consistency of code - i.e. did you really get such a small error using this code?

KAGGLE submission instructions and instructions how to create Kaggle account  will be posted in recitation materials next  week - but first build your predictor using R studio

